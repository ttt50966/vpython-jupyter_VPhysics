name: Upload Python wheel to PyPI

on:
  release:
    types: [created]

jobs:
  wheels:

    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
        platform: [macos-latest, windows-latest]  # Wheels on linux below
    runs-on: ${{ matrix.platform }}

    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine Cython build

    - name: Build and publish wheel
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_TOKEN }}
      run: |
        python -m build
        twine upload dist/*.whl

  linux_wheels:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Stable with rustfmt and clippy
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
    - name: Python wheels manylinux build
      uses: RalfG/python-wheels-manylinux-build@v0.4.2
      with:
        python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
        build-requirements: 'setuptools cython setuptools_scm'
    - name: Build and publish wheel
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_TOKEN }}
      run: |
        twine upload dist/vpython-*-manylinux*.whl

  linux_aarch64_wheels:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
    - name: Python wheels manylinux build
      uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_aarch64
      with:
        python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
        build-requirements: 'setuptools cython setuptools_scm'
    - name: Build and publish wheel
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_TOKEN }}
      run: |
        twine upload dist/vpython-*-manylinux*.whl

  sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine Cython build
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_TOKEN }}
      run: |
        python -m build
        twine upload dist/*.tar.gz
